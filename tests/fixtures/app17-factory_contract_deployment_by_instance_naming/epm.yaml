jobs:

- name: setStorageBase
  job:
    set:
      val: 5

- name: deployGSFactoryFactory
  job:
    deploy:
      contract: GSFactoryFactory.sol
      instance: all
      wait: true

- name: createGSFactory
  job:
    call:
      destination: $deployGSFactoryFactory
      data: create
      abi: GSFactoryFactory
      wait: true

#Double check created address
- name:  getGSFactoryAddr
  job:
    query-contract:
      destination: $deployGSFactoryFactory
      abi: GSFactoryFactory
      data: getLast

- name: assertFactoryAddr
  job:
    assert:
      key: $getGSFactoryAddr
      relation: eq
      val: $createGSFactory

# Now talking to the factory-created factory...
- name: createGSContract
  job:
    call:
      destination: $createGSFactory
      abi: GSFactory
      data: create
      wait: true

#Double check created address
- name:  getGSAddr
  job:
    query-contract:
      abi: GSFactory
      destination: $createGSFactory
      data: getLast

- name: assertAddr
  job:
    assert:
      key: $getGSAddr
      relation: eq
      val: $createGSContract

#Normal get set contract testing
- name: setStorage
  job:
    call:
      destination: $createGSContract
      data: set $setStorageBase
      abi: GSContract
      wait: true

- name: queryStorage
  job:
    query-contract:
      destination: $createGSContract
      abi: GSContract
      data: get

- name: assertStorage
  job:
    assert:
      key: $queryStorage
      relation: eq
      val: $setStorageBase